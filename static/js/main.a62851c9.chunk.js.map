{"version":3,"sources":["components/InputField.tsx","components/SingleTodo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["InputField","todo","setTodo","handleAdd","inputRef","useRef","className","onSubmit","e","current","blur","ref","type","placeholder","value","onChange","target","SingleTodo","todos","setTodos","useState","edit","setEdit","editTodo","setEditTodo","useEffect","focus","id","preventDefault","map","handleEdit","isDone","Done","onClick","Edit","filter","Delete","TodoList","App","Date","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a62851c9.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport \"./inputField.css\";\r\n\r\ninterface props {\r\n  todo: string;\r\n  setTodo: React.Dispatch<React.SetStateAction<string>>;\r\n  handleAdd: (e: React.FormEvent) => void;\r\n}\r\n\r\nconst InputField = ({ todo, setTodo, handleAdd }: props) => {\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  return (\r\n    <form className=\"input\" \r\n      onSubmit={(e) => {\r\n        handleAdd(e);\r\n        inputRef.current?.blur();\r\n        }}\r\n    >\r\n      <input \r\n        ref={inputRef}\r\n        type=\"input\" \r\n        placeholder=\"Entrez une tache\" \r\n        className=\"input_box\" \r\n        value={todo}\r\n        onChange={(e) => setTodo(e.target.value)}\r\n      />\r\n      <button className=\"input_submit\" type=\"submit\" >\r\n        Valider\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputField;","import { Delete, Done, Edit } from '@material-ui/icons';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Todo } from '../model';\r\nimport \"./singleTodo.css\";\r\nimport { useState } from 'react';\r\n\r\ntype Props = {\r\n  todo: Todo,\r\n  todos: Todo[],\r\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>\r\n}\r\n\r\nconst SingleTodo:React.FC<Props> = ({ todo, todos, setTodos }: Props) => {\r\n\r\n  const [edit, setEdit] = useState<boolean>(false);\r\n  const [editTodo, setEditTodo] = useState<string>(todo.todo);\r\n  \r\n  const handleDone = (id: number) => {\r\n    setTodos(\r\n      todos.map((todo) => \r\n        todo.id === id ? {...todo, isDone: !todo.isDone} : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDelete = (id: number) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id))\r\n  }\r\n\r\n  const handleEdit = (e: React.FormEvent, id: number) => {\r\n    e.preventDefault();\r\n\r\n    setTodos(\r\n      todos.map((todo) => (\r\n        todo.id === id ? {...todo, todo : editTodo} : todo\r\n    )));\r\n    setEdit(false);\r\n  }\r\n\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n  useEffect(() => {\r\n    inputRef.current?.focus()\r\n  }, [edit])\r\n  \r\n  \r\n  return (\r\n    <form className=\"todos_single\" onSubmit={(e) => handleEdit(e,todo.id)}>\r\n      {\r\n        edit ? (\r\n          <input \r\n            ref={inputRef}\r\n            value={editTodo} \r\n            onChange={(e) => \r\n              setEditTodo(e.target.value)} \r\n            className=\"todos_single_text\" \r\n          />\r\n        ) : \r\n          todo.isDone ? (\r\n            <s className=\"todos_single_text\">{todo.todo}</s>\r\n          ) : (\r\n            <span className=\"todos_single_text\">{todo.todo}</span>\r\n          )\r\n        \r\n      }\r\n\r\n      <div>\r\n        <span className=\"icon\">\r\n          <Done onClick={() => handleDone(todo.id)}/>\r\n        </span>\r\n        <span className=\"icon\" \r\n          onClick={() => {\r\n            if(!edit && !todo.isDone) {\r\n              setEdit(!edit);\r\n            }\r\n        }}\r\n        >\r\n          <Edit />\r\n        </span>\r\n        <span className=\"icon\" onClick={() => handleDelete(todo.id)}>\r\n          <Delete />\r\n        </span>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SingleTodo;","import React from 'react';\r\nimport \"./todoList.css\";\r\nimport { Todo } from '../model';\r\nimport SingleTodo from './SingleTodo';\r\n\r\n\r\ninterface Props {\r\n  todos: Todo[];\r\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\r\n}\r\n\r\nconst TodoList: React.FC<Props> = ({ todos, setTodos }:Props) => {\r\n  return (\r\n    <div className=\"todos\">\r\n      {\r\n        todos.map((todo) => (\r\n          <SingleTodo \r\n            todo={todo}\r\n            key={todo.id}\r\n            todos={todos}\r\n            setTodos={setTodos}\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import { useState } from 'react';\nimport './App.css';\nimport InputField from './components/InputField';\nimport TodoList from './components/TodoList';\nimport { Todo } from './model';\n\nconst App:React.FC = () => {\n\n  const [todo, setTodo] = useState<string>(\"\");\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const handleAdd = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if(todo) {\n      setTodos([...todos, {id: Date.now(), todo: todo, isDone:false}])\n      setTodo(\"\");\n    }\n  }\n\n  return (\n    \n    <div className=\"App\">\n      <span className=\"heading\">NOTE App</span>\n      <InputField \n        todo={todo} \n        setTodo={setTodo} \n        handleAdd={handleAdd} \n      />\n      <TodoList \n        todos={todos}\n        setTodos={setTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}